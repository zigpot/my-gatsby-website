{"version":3,"file":"component---src-pages-blog-index-js-ab9ca4226917adbcc11d.js","mappings":"2KAGWA,EAAc,sCACdC,EAAc,sCC0DzB,MAnDe,IAA8B,IAA7B,UAAEC,EAAS,SAAEC,GAAU,EACrC,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,uBAAKC,UDtBc,mCCuBjB,0BAAQA,UDlBS,oCCkBcF,EAAKG,KAAKC,aAAaC,OACtD,2BACE,sBAAIH,UDrBU,mCCsBZ,sBAAIA,UAAWN,GACb,gBAAC,EAAAU,KAAI,CAACC,GAAG,IAAIL,UAAWL,GAAa,SAIvC,sBAAIK,UAAWN,GACb,gBAAC,EAAAU,KAAI,CAACC,GAAG,SAASL,UAAWL,GAAa,UAI5C,sBAAIK,UAAWN,GACb,gBAAC,EAAAU,KAAI,CAACC,GAAG,QAAQL,UAAWL,GAAa,SAI3C,sBAAIK,UAAWN,GACb,gBAAC,EAAAU,KAAI,CAACC,GAAG,eAAeL,UAAWL,GAAa,gBAIlD,sBAAIK,UAAWN,GACb,gBAAC,EAAAU,KAAI,CAACC,GAAG,SAASL,UAAWL,GAAa,YAMhD,4BACE,sBAAIK,UDrDS,iCCqDYJ,GACxBC,GAEC,C,+CCvCV,IAhBY,IAAgB,IAAf,MAAEM,GAAO,EACpB,MAAML,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,6BAAQI,EAAM,MAAIL,EAAKG,KAAKC,aAAaC,MAAc,C,qHCR3D,MAsCaG,EAAO,IAAM,gBAAC,IAAG,CAACH,MAAM,eAErC,UAxCiB,IAAe,IAAd,KAAEL,GAAM,EACxB,OACE,gBAAC,IAAM,CAACF,UAAU,cAEdE,EAAKS,OAAOC,MAAMC,KAAIC,GACpB,2BAASC,IAAKD,EAAKE,IACjB,0BACE,gBAAC,EAAAR,KAAI,CAACJ,UAAU,cAAcK,GAAE,SAAWK,EAAKG,YAAYC,MACzDJ,EAAKG,YAAYV,QAItB,gCAAE,qBAAGH,UAAU,eAAce,EAAAA,EAAAA,GAAWL,EAAKG,YAAYG,OACzD,yBAAKN,EAAKO,aAKT,C,qBChBb,IARoBD,IAChB,IAAIE,EAAQF,EAAKG,MAAM,KAIvB,OADa,IAAIC,KAAKF,EAAM,GAAIA,EAAM,GAAK,EAAGA,EAAM,IACtCG,cAAc,C","sources":["webpack://my-gatsby-site/./src/components/layout.module.css","webpack://my-gatsby-site/./src/components/layout.js","webpack://my-gatsby-site/./src/components/seo.js","webpack://my-gatsby-site/./src/pages/blog/index.js","webpack://my-gatsby-site/./src/utils/formatDate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import * as React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport {\n  container,\n  heading,\n  navLinks,\n  navLinkItem,\n  navLinkText,\n  siteTitle,\n} from './layout.module.css'\n\nconst Layout = ({ pageTitle, children }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={container}>\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\n      <nav>\n        <ul className={navLinks}>\n          <li className={navLinkItem}>\n            <Link to=\"/\" className={navLinkText}>\n              Home\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/about\" className={navLinkText}>\n              About\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/blog\" className={navLinkText}>\n              Blog\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/literatures\" className={navLinkText}>\n              Literatures\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/terms\" className={navLinkText}>\n              Terms\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <main>\n        <h1 className={heading}>{pageTitle}</h1>\n        {children}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <title>{title} | {data.site.siteMetadata.title}</title>\n  )\n}\n\nexport default Seo","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../../components/layout'\nimport Seo from '../../components/seo'\nimport './index.css'\nimport formatDate from '../../utils/formatDate'\n\nconst BlogPage = ({ data }) => {\n  return (\n    <Layout pageTitle=\"Blog Posts\">\n      {\n        data.allMdx.nodes.map(node => (\n          <article key={node.id}>\n            <h3>\n              <Link className='entry-title' to={`/blog/${node.frontmatter.slug}`}>\n                {node.frontmatter.title}\n              </Link>\n            </h3>\n            { !true ?null:\n            <><p className='entry-date'>{formatDate(node.frontmatter.date)}</p>\n            <p >{node.excerpt}</p></>\n            }\n          </article>\n        ))\n      }\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { frontmatter: { date: DESC }}) {\n      nodes {\n        frontmatter {\n          date\n          title\n          slug\n        }\n        id\n        excerpt\n      }\n    }\n  }\n`\n\nexport const Head = () => <Seo title=\"Blog Posts\" />\n\nexport default BlogPage","\nconst formatDate = (date) => {\n    var parts = date.split('-');\n    // Please pay attention to the month (parts[1]); JavaScript counts months from 0:\n    // January - 0, February - 1, etc.\n    var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n    return mydate.toDateString();\n  }\n\nexport default formatDate;"],"names":["navLinkItem","navLinkText","pageTitle","children","data","useStaticQuery","className","site","siteMetadata","title","Link","to","Head","allMdx","nodes","map","node","key","id","frontmatter","slug","formatDate","date","excerpt","parts","split","Date","toDateString"],"sourceRoot":""}